name: 'ApproverBot - Approvals in IssueOps'
description: 'IssueOps (ChatOps) workflows that require Approvals from someone in a designated GitHub team'

branding:
  icon: "user-check"
  color: "blue"

inputs:
  team-name:
    description: "The name of the team in GitHub to check for the approval command; ie: approver-team"
    required: true
  app-private-key:
    description: "Private key for the GitHub App that is installed on the repo; ie: secrets.PRIVATE_KEY"
    required: true
  app-id:
    description: "The GitHub App ID; ie: 170284"
    required: true
  fail-if-approval-not-found:
    description: "Fail the action if the command is not found in the comments from someone in the approver team"
    required: true
    default: 'false'
  command-name:
    description: "The name of the approve command, without the slash; ie: approve"
    required: false
    default: 'approve'

outputs:
  approved:
    description: "Returns 'true' if the approval command was found in a comment from someone in the approver team, otherwise 'false'"
    value: ${{ steps.check-approval.outputs.approved }}

runs:
  using: "composite"
  steps:
    - uses: tibdex/github-app-token@v1
      id: get_installation_token
      with:
        app_id: ${{ inputs.app-id }}
        private_key: ${{ inputs.app-private-key }}

    - id: check-approval
      name: check if there is an approve command from authorized party
      shell: bash
      run: |
        # "checking for a /${{ inputs.command-name }} command in the comments from someone in the approver team"
        users=$(curl -sLX GET 'https://api.github.com/orgs/${{ github.repository_owner }}/teams/${{ inputs.team-name }}/members' \
          --header "Accept: application/vnd.github.v3+json" \
          --header "Authorization: Bearer ${{ steps.get_installation_token.outputs.token }}" | jq -c '.[].login')
        approveCommand="/${{ inputs.command-name }}"
        comments=$(curl -sLX GET '${{ github.event.comment.issue_url }}/comments' \
          --header "Accept: application/vnd.github.v3+json" \
          --header "Authorization: Bearer ${{ steps.get_installation_token.outputs.token }}")
        authorized=false
        for comment in $(echo $comments | jq -r '.[] | @base64'); do
            body=$(echo $comment | base64 --decode | jq -r '.body')
            actor=$(echo $comment | base64 --decode | jq -r '.user.login')
            if [[ $body == *"$approveCommand"* ]]; then
                echo "Approve command found..."
                echo $users | grep -q $actor && echo "Found $actor in users" && authorized=true || echo "Not found $actor in users"
            else
                echo "Approve command not found..."
            fi
        done
        if $authorized; then
            echo "Approval authorized"
            echo "::set-output name=approved::true"
        else
            echo "Approval not found or not authorized"
            echo "::set-output name=approved::false"
            echo "::error title=Not Approved::There is no /${{ inputs.command-name }} command in the comments from someone in the ${{ github.repository_owner }}/${{ inputs.team-name }} team"
        fi

