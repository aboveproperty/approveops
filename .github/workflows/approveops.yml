name: ApproveOps
on:
  issue_comment:
    types: [created, edited]

env:
  team-name: 'approver-team'

jobs:
  approveops:
    runs-on: ubuntu-latest
    # Use this if statement in your own action
    # if: ${{ !github.event.issue.pull_request && contains(github.event.comment.body, '/approved') }}
    outputs:
      approved: ${{ steps.check-approval.outputs.approved }}

    steps:
      - uses: tibdex/github-app-token@v1
        id: get_installation_token
        with:
          app-id: 194897
          private_key: ${{ secrets.PRIVATE_KEY }}

      - id: check-approval
        name: check if there is an approve command from authorized party
        run: |
          users=$(curl -sLX GET 'https://api.github.com/orgs/${{ github.repository_owner }}/teams/${{ env.team-name }}/members' \
            --header "Accept: application/vnd.github.v3+json" \
            --header "Authorization: Bearer ${{ steps.get_installation_token.outputs.token }}" | jq -c '.[].login')
          approveCommand="/approved"
          comments=$(curl -sLX GET '${{ github.event.comment.issue_url }}/comments' \
            --header "Accept: application/vnd.github.v3+json" \
            --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}")
          authorized=false
          for comment in $(echo $comments | jq -r '.[] | @base64'); do
              body=$(echo $comment | base64 --decode | jq -r '.body')
              actor=$(echo $comment | base64 --decode | jq -r '.user.login')
              if [[ $body == *"$approveCommand"* ]]; then
                  echo "Approve command found..."
                  echo $users | grep -q $actor && echo "Found $actor in users" && authorized=true || echo "Not found $actor in users"
              else
                  echo "Approve command not found..."
              fi
          done
          if $authorized; then
              echo "Authorized by $actor"
              echo "::set-output name=approved::true"
          else
              echo "Not authorized"
              echo "::set-output name=approved::false"
              echo "::error title=Not Approved::There is no /approve command in the comments from someone in the ${{ github.repository_owner }}/${{ env.team-name }} team"
          fi
